<?php namespace Modules\$MODULENAME$\Providers;

use Illuminate\Support\ServiceProvider;

class $CLASS$ extends ServiceProvider {

        /**
         * Indicates if loading of the provider is deferred.
         *
         * @var bool
         */
        protected $defer = false;

        /**
         * Boot the application events.
         *
         * @return void
         */
        public function boot()
        {
            $this->registerConfig();
            $this->registerTranslations();
            $this->registerViews();
        }

        /**
         * Register the service provider.
         *
         * @return void
         */
        public function register()
        {
            //
        }

        /**
         * Register config.
         *
         * @return void
         */
        protected function registerConfig()
        {
            $this->publishes([
                __DIR__.'/../Config/config.php' => config_path('$MODULENAME$.php'),
            ]);
            $this->mergeConfigFrom(
                __DIR__.'/../Config/config.php', '$MODULENAME$'
            );
        }

        /**
         * Register views.
         *
         * @return void
         */
        public function registerViews()
        {
            $viewPath = base_path('modules/$MODULENAME$/Resources/views');

            $sourcePath = __DIR__.'/../Resources/views';

            $this->publishes([
                $sourcePath => $viewPath
            ]);

            $this->loadViewsFrom([$viewPath, $sourcePath], '$MODULENAME$');
        }

        /**
         * Register translations.
         *
         * @return void
         */
        public function registerTranslations()
        {
            $langPath = base_path('resources/lang/modules/$MODULENAME$');

            if (is_dir($langPath)) {
                $this->loadTranslationsFrom($langPath, '$MODULENAME$');
            } else {
                $this->loadTranslationsFrom(__DIR__ .'/../Resources/lang', '$MODULENAME$');
            }
        }

        /**
         * Get the services provided by the provider.
         *
         * @return array
         */
        public function provides()
        {
            return array();
        }

    }
