<?php namespace App\Modules\$STUDLY_NAME$\Services;

use App\Modules\$STUDLY_NAME$\$STUDLY_NAME$;
use App\Services\ServiceInterface;
use App\Modules\$STUDLY_NAME$\Repositories\$STUDLY_NAME$Repository;

/**
 * Class $STUDLY_NAME$Service
 *
 * @package  $STUDLY_NAME$
 * @category Service
 */
class $STUDLY_NAME$Service implements ServiceInterface {

    protected $$LOWER_NAME$Repository;

    /**
     * $STUDLY_NAME$Service constructor.
     * @param $STUDLY_NAME$Repository $$LOWER_NAME$Repository
     *
     * @package  $STUDLY_NAME$
     * @category Service
     *
     */
    public function __construct($STUDLY_NAME$Repository $$LOWER_NAME$Repository)
    {
        $this->$LOWER_NAME$Repository = $$LOWER_NAME$Repository;
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param $request
     *
     * @package  $STUDLY_NAME$
     * @category Service
     *
     * @return mixed
     */
    public function store($request)
    {
        return $this->$LOWER_NAME$Repository->create(
            $request
        );
    }

    /**
     * Update the specified resource in storage.
     *
     * @param $request
     * @param $id
     *
     * @package  $STUDLY_NAME$
     * @category Service
     *
     * @return mixed
     */
    public function update($request, $id)
    {
        return $this->$LOWER_NAME$Repository->update(
            $request , $id
        );
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param $request
     * @param $id
     *
     * @package  $STUDLY_NAME$
     * @category Service
     *
     * @return mixed
     */
    public function delete($id)
    {
        return $this->$$LOWER_NAME$Repository->update(
            ['estatus' => 'CA'] , $id
        );
    }

}